[{"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/index.tsx":"1","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/middleware/api.js":"2","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/app/app.tsx":"3","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/reducers/index.js":"4","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/footer/footer.tsx":"5","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/reportWebVitals.ts":"6","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/store.js":"7","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/middleware/generateId.js":"8","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/app/index.js":"9","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/constants.js":"10","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/layouts/mainLayout/mainLayout.tsx":"11","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/pages/homePage/homePage.tsx":"12","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/pages/pageOne/pageOne.tsx":"13","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/cards/cards.js":"14","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/cards/card/card.js":"15","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/reducers/postsReducer.js":"16","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/loader/loader.tsx":"17","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/utils.js":"18","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/selectors.js":"19","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/actions/action.js":"20","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/routes/index.ts":"21"},{"size":776,"mtime":1612011424809,"results":"22","hashOfConfig":"23"},{"size":561,"mtime":1612010718483,"results":"24","hashOfConfig":"23"},{"size":567,"mtime":1612004858619,"results":"25","hashOfConfig":"23"},{"size":169,"mtime":1612010908403,"results":"26","hashOfConfig":"23"},{"size":263,"mtime":1612004210165,"results":"27","hashOfConfig":"23"},{"size":412,"mtime":1612000850463,"results":"28","hashOfConfig":"23"},{"size":630,"mtime":1612012068263,"results":"29","hashOfConfig":"23"},{"size":316,"mtime":1612002687614,"results":"30","hashOfConfig":"23"},{"size":29,"mtime":1612001749876,"results":"31","hashOfConfig":"23"},{"size":141,"mtime":1612008223734,"results":"32","hashOfConfig":"23"},{"size":503,"mtime":1612004243572,"results":"33","hashOfConfig":"23"},{"size":192,"mtime":1612006789171,"results":"34","hashOfConfig":"23"},{"size":129,"mtime":1612004858620,"results":"35","hashOfConfig":"23"},{"size":1143,"mtime":1612010438243,"results":"36","hashOfConfig":"23"},{"size":551,"mtime":1612009479075,"results":"37","hashOfConfig":"23"},{"size":990,"mtime":1612012509608,"results":"38","hashOfConfig":"23"},{"size":271,"mtime":1611994261230,"results":"39","hashOfConfig":"23"},{"size":95,"mtime":1612008223730,"results":"40","hashOfConfig":"23"},{"size":381,"mtime":1612010075219,"results":"41","hashOfConfig":"23"},{"size":465,"mtime":1612012640273,"results":"42","hashOfConfig":"23"},{"size":69,"mtime":1612004858622,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1waqy9t",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/index.tsx",[],["90","91"],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/middleware/api.js",["92","93"],"import { Middleware } from 'redux'\nimport {FAILURE, REQUEST, SUCCESS} from '../constants'\nimport {RootStateType} from '../reducers'\n\nconst api = (store) => (next) => async (action) => {\n    if (!action.CallAPI) return next(action)\n\n    const {CallAPI, type, ...rest} = action\n\n    next({...rest, type: type + REQUEST})\n\n    try {\n        const response = await fetch(CallAPI).then((res) => res.json())\n        next({...rest, type: type + SUCCESS, response})\n    } catch (error) {\n        next({...rest, type: type + FAILURE, error})\n    }\n}\n\nexport default api\n",["94","95"],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/app/app.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/reducers/index.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/footer/footer.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/reportWebVitals.ts",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/store.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/middleware/generateId.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/app/index.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/constants.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/layouts/mainLayout/mainLayout.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/pages/homePage/homePage.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/pages/pageOne/pageOne.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/cards/cards.js",["96","97","98","99","100","101"],"import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport styles from './cards.module.scss'\nimport Card from \"./card/card\";\nimport Loader from \"../loader/loader\";\nimport {createStructuredSelector} from \"reselect\";\nimport {postsListSelector, postsLoadedSelector, postsLoadingSelector, postsSelector} from \"../../redux/selectors\";\nimport {loadPosts} from \"../../redux/actions/action\";\n\nconst Cards = (props) => {\n    const {\n        posts,\n        loadPosts,\n        loading,\n        loaded,\n    } = props\n    console.log('[Cards][props]', props)\n\n    useEffect(() => {\n        if (!loading && !loaded) loadPosts()\n    }, [loadPosts, loading, loaded])\n\n    if (loading || !loaded) return <Loader />\n\n    return (\n        <div className={styles.cards}>\n            <div className={styles.container}>\n                <h2 className={styles.title}>Header</h2>\n                <div className={styles.inner}>\n                    <Card />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    posts: state\n})\n\nexport default connect(mapStateToProps,\n    {loadPosts}\n)(Cards)","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/cards/card/card.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/reducers/postsReducer.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/loader/loader.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/utils.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/selectors.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/actions/action.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/routes/index.ts",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":20},{"ruleId":"106","severity":1,"message":"110","line":3,"column":9,"nodeType":"108","messageId":"109","endLine":3,"endColumn":22},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"111","line":6,"column":9,"nodeType":"108","messageId":"109","endLine":6,"endColumn":33},{"ruleId":"106","severity":1,"message":"112","line":7,"column":9,"nodeType":"108","messageId":"109","endLine":7,"endColumn":26},{"ruleId":"106","severity":1,"message":"113","line":7,"column":28,"nodeType":"108","messageId":"109","endLine":7,"endColumn":47},{"ruleId":"106","severity":1,"message":"114","line":7,"column":49,"nodeType":"108","messageId":"109","endLine":7,"endColumn":69},{"ruleId":"106","severity":1,"message":"115","line":7,"column":71,"nodeType":"108","messageId":"109","endLine":7,"endColumn":84},{"ruleId":"106","severity":1,"message":"116","line":12,"column":9,"nodeType":"108","messageId":"109","endLine":12,"endColumn":14},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Middleware' is defined but never used.","Identifier","unusedVar","'RootStateType' is defined but never used.","'createStructuredSelector' is defined but never used.","'postsListSelector' is defined but never used.","'postsLoadedSelector' is defined but never used.","'postsLoadingSelector' is defined but never used.","'postsSelector' is defined but never used.","'posts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]