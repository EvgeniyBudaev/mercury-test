[{"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/index.tsx":"1","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/middleware/api.js":"2","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/app/app.tsx":"3","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/footer/footer.tsx":"4","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/reportWebVitals.ts":"5","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/store.js":"6","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/middleware/generateId.js":"7","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/app/index.js":"8","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/constants.js":"9","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/layouts/mainLayout/mainLayout.tsx":"10","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/pages/homePage/homePage.tsx":"11","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/pages/pageOne/pageOne.tsx":"12","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/cards/cards.js":"13","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/cards/card/card.js":"14","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/reducers/postsReducer.ts":"15","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/loader/loader.tsx":"16","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/utils.js":"17","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/selectors.js":"18","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/actions/action.ts":"19","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/routes/index.ts":"20","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/reducers/index.ts":"21"},{"size":776,"mtime":1612011424809,"results":"22","hashOfConfig":"23"},{"size":561,"mtime":1612010718483,"results":"24","hashOfConfig":"23"},{"size":567,"mtime":1612004858619,"results":"25","hashOfConfig":"23"},{"size":263,"mtime":1612004210165,"results":"26","hashOfConfig":"23"},{"size":412,"mtime":1612000850463,"results":"27","hashOfConfig":"23"},{"size":630,"mtime":1612012068263,"results":"28","hashOfConfig":"23"},{"size":316,"mtime":1612002687614,"results":"29","hashOfConfig":"23"},{"size":29,"mtime":1612001749876,"results":"30","hashOfConfig":"23"},{"size":307,"mtime":1612017807905,"results":"31","hashOfConfig":"23"},{"size":503,"mtime":1612004243572,"results":"32","hashOfConfig":"23"},{"size":192,"mtime":1612006789171,"results":"33","hashOfConfig":"23"},{"size":129,"mtime":1612004858620,"results":"34","hashOfConfig":"23"},{"size":1217,"mtime":1612014138406,"results":"35","hashOfConfig":"23"},{"size":551,"mtime":1612009479075,"results":"36","hashOfConfig":"23"},{"size":1315,"mtime":1612031689849,"results":"37","hashOfConfig":"23"},{"size":271,"mtime":1611994261230,"results":"38","hashOfConfig":"23"},{"size":95,"mtime":1612008223730,"results":"39","hashOfConfig":"23"},{"size":345,"mtime":1612014138403,"results":"40","hashOfConfig":"23"},{"size":2102,"mtime":1612031689851,"results":"41","hashOfConfig":"23"},{"size":69,"mtime":1612004858622,"results":"42","hashOfConfig":"23"},{"size":317,"mtime":1612013437655,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1waqy9t",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/index.tsx",[],["91","92"],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/middleware/api.js",["93","94"],"import { Middleware } from 'redux'\nimport {FAILURE, REQUEST, SUCCESS} from '../constants'\nimport {RootStateType} from '../reducers'\n\nconst api = (store) => (next) => async (action) => {\n    if (!action.CallAPI) return next(action)\n\n    const {CallAPI, type, ...rest} = action\n\n    next({...rest, type: type + REQUEST})\n\n    try {\n        const response = await fetch(CallAPI).then((res) => res.json())\n        next({...rest, type: type + SUCCESS, response})\n    } catch (error) {\n        next({...rest, type: type + FAILURE, error})\n    }\n}\n\nexport default api\n",["95","96"],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/app/app.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/footer/footer.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/reportWebVitals.ts",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/store.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/middleware/generateId.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/app/index.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/constants.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/layouts/mainLayout/mainLayout.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/pages/homePage/homePage.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/pages/pageOne/pageOne.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/cards/cards.js",["97","98"],"import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport styles from './cards.module.scss'\nimport Card from \"./card/card\";\nimport Loader from \"../loader/loader\";\nimport {createStructuredSelector} from \"reselect\";\nimport {postsListSelector, postsLoadedSelector, postsLoadingSelector, postsSelector} from \"../../redux/selectors\";\nimport {loadPosts} from \"../../redux/actions/action\";\n\nconst Cards = (props) => {\n    const {\n        posts,\n        loadPosts,\n        loading,\n        loaded,\n    } = props\n    console.log('[Cards][props]', props)\n\n    useEffect(() => {\n        if (!loading && !loaded) loadPosts()\n    }, [loadPosts, loading, loaded])\n\n    if (loading || !loaded) return <Loader />\n\n    return (\n        <div className={styles.cards}>\n            <div className={styles.container}>\n                <h2 className={styles.title}>Header</h2>\n                <div className={styles.inner}>\n                    <Card />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(\n    createStructuredSelector({\n        posts: postsListSelector,\n        loading: postsLoadingSelector,\n        loaded: postsLoadedSelector,\n    }),\n    {loadPosts}\n)(Cards)","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/cards/card/card.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/reducers/postsReducer.ts",["99"],"import {arrToMap} from \"../utils\";\nimport {LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE} from \"../constants\";\nimport {PostsTypes, IFailure} from \"../actions/action\";\n\ninterface IPost {\n    id: number,\n    userId: number,\n    title: string,\n    body: string\n}\ninterface IPostsEntities {\n    [payload: string]: IPost\n}\ninterface IPostsState {\n    loading: boolean\n    loaded: boolean,\n    error:  null | IFailure,\n    entities: IPostsEntities\n}\nconst initialState: IPostsState = {\n    entities: {},\n    loading: false,\n    loaded: false,\n    error: null,\n}\n\n\nconst postsReducer = (state = initialState, action: PostsTypes): IPostsState => {\n\n    switch (action.type) {\n        case LOAD_POSTS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: null,\n            }\n        case LOAD_POSTS_SUCCESS:\n            return {\n                ...state,\n                entities: arrToMap(action.payload),\n                loading: false,\n                loaded: true,\n            }\n        case LOAD_POSTS_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                loaded: false,\n                error: action.error,\n            }\n        default:\n            return state\n    }\n}\n\nexport default postsReducer","/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/components/loader/loader.tsx",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/utils.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/selectors.js",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/actions/action.ts",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/routes/index.ts",[],"/Users/evgeniybudaev/Documents/CODE/REACT/Works/mercury-test/src/frontend/redux/reducers/index.ts",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":10,"nodeType":"106","messageId":"107","endLine":1,"endColumn":20},{"ruleId":"104","severity":1,"message":"108","line":3,"column":9,"nodeType":"106","messageId":"107","endLine":3,"endColumn":22},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"109","line":7,"column":71,"nodeType":"106","messageId":"107","endLine":7,"endColumn":84},{"ruleId":"104","severity":1,"message":"110","line":12,"column":9,"nodeType":"106","messageId":"107","endLine":12,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":3,"column":9,"nodeType":"106","messageId":"107","endLine":3,"endColumn":17},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Middleware' is defined but never used.","Identifier","unusedVar","'RootStateType' is defined but never used.","'postsSelector' is defined but never used.","'posts' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'AppThunk' is defined but never used.","no-global-assign","no-unsafe-negation"]